name: pystats

"on": [pull_request]

jobs:
  collect-stats:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/checkout@v3
      with:
        repository: python/cpython
        path: cpython
    - name: Install Dependencies
      run: |
        cd cpython
        sudo ./.github/workflows/posix-deps-apt.sh
    - name: Add ccache to PATH
      run: |
        echo "PATH=/usr/lib/ccache:$PATH" >> $GITHUB_ENV
    - name: Configure ccache action
      uses: hendrikmuhs/ccache-action@v1.2
    - name: Create pystats directory
      run: |
        # If we don't do this, stats are printed to the console
        mkdir /tmp/py_stats
    - name: Compile
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cd cpython
        ./configure --enable-pystats --prefix=$PWD/install
        make -j4
        make install
    - name: Install pyperformance into the system python
      run: |
        python -m pip install pyperformance==1.0.6
    - name: Collect stats
      run: |
        # Delete py_stats -- the Python build (deepfreeze etc.) itself creates stats
        rm -rf /tmp/py_stats/*
        # Run pyperformance itself on the system python, so it doesn't collect stats.
        # The benchmarks themselves are run using the python we built here.
        python -m pyperformance run -b deepcopy --output results.json --python ./cpython/install/bin/python3 || echo "done"
    - name: Summarize stats
      run: |
        export FILE_SUFFIX=`git log --pretty=format:'%h' -n 1`-`date --rfc-3339=date`
        # Needs to run in same version of Python as build so the opcodes and source files match
        ./install/bin/python3 Tools/scripts/summarize_stats.py --json-output stats/pystats-${FILE_SUFFIX}-.json &> stats/pystats-${FILE_SUFFIX}.md
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pystats
        path: |
          *.json
          *.md
    - name: Add to repo
      uses: EndBug/add-and-commit@v9
      with:
        add: pystats
